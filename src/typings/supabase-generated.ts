/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/game": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.game.id"];
          createdAt?: parameters["rowFilter.game.createdAt"];
          config?: parameters["rowFilter.game.config"];
          state?: parameters["rowFilter.game.state"];
          players?: parameters["rowFilter.game.players"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["game"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** game */
          game?: definitions["game"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.game.id"];
          createdAt?: parameters["rowFilter.game.createdAt"];
          config?: parameters["rowFilter.game.config"];
          state?: parameters["rowFilter.game.state"];
          players?: parameters["rowFilter.game.players"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.game.id"];
          createdAt?: parameters["rowFilter.game.createdAt"];
          config?: parameters["rowFilter.game.config"];
          state?: parameters["rowFilter.game.state"];
          players?: parameters["rowFilter.game.players"];
        };
        body: {
          /** game */
          game?: definitions["game"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/game_update_letters": {
    post: {
      parameters: {
        body: {
          args: {
            game_id: string;
            new_letters: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/game_update_stage": {
    post: {
      parameters: {
        body: {
          args: {
            game_id: string;
            new_stage: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/game_update_mode": {
    post: {
      parameters: {
        body: {
          args: {
            game_id: string;
            new_mode: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  /** A whole ass game */
  game: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    createdAt?: string;
    config: string;
    state: string;
    players: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** game */
  "body.game": definitions["game"];
  "rowFilter.game.id": string;
  "rowFilter.game.createdAt": string;
  "rowFilter.game.config": string;
  "rowFilter.game.state": string;
  "rowFilter.game.players": string;
}

export interface operations {}

export interface external {}
